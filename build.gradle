apply plugin: 'com.android.library'

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'org.aspectj:aspectjtools:1.8.9'
        classpath 'org.aspectj:aspectjweaver:1.8.9'
    }
}

android {
    compileSdkVersion Integer.valueOf(project.compileSdkVersion)
    buildToolsVersion project.buildToolsVersion
    defaultConfig {
        minSdkVersion Integer.valueOf(project.minSdkVersion)
        targetSdkVersion Integer.valueOf(project.targetSdkVersion)
        versionCode Integer.valueOf(project.versionCode)
        versionName project.versionName
//        jackOptions {
//            enabled true
//        }
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}
//android.libraryVariants.all { variant ->
//    JavaCompile javaCompile = variant.javaCompile
//    javaCompile.doLast {
//        String[] args = [
//                "-showWeaveInfo",
//                "-1.5",
//                "-inpath", javaCompile.destinationDir.toString(),
//                "-aspectpath", javaCompile.classpath.asPath,
//                "-d", javaCompile.destinationDir.toString(),
//                "-classpath", javaCompile.classpath.asPath,
//                "-bootclasspath", android.bootClasspath.join(File.pathSeparator)
//        ]
//
//        MessageHandler handler = new MessageHandler(true);
//        new Main().run(args, handler)
//
//        def log = project.logger
//        for (IMessage message : handler.getMessages(null, true)) {
//            switch (message.getKind()) {
//                case IMessage.ABORT:
//                case IMessage.ERROR:
//                case IMessage.FAIL:
//                    log.error message.message, message.thrown
//                    break;
//                case IMessage.WARNING:
//                case IMessage.INFO:
//                    log.info message.message, message.thrown
//                    break;
//                case IMessage.DEBUG:
//                    log.debug message.message, message.thrown
//                    break;
//            }
//        }
//    }
//}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:$SUPPORTVERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORTVERSION"
    compile 'io.reactivex.rxjava2:rxjava:2.1.14'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.2'
    compile 'org.aspectj:aspectjrt:1.8.9'
//    compile files('libs/gson-2.7.jar')
    compile 'com.tamic.novate:novate:1.5.5'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.facebook.stetho:stetho:1.5.0'
//    compile 'com.zhy:autolayout:1.4.3'

    compile 'com.orhanobut:logger:2.1.1'
    //测试框架

    androidTestCompile 'com.android.support.test:runner:0.5' ;
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'
    androidTestCompile 'org.hamcrest:hamcrest-integration:1.3'
}
